buildscript {
    ext {
        kotlinVersion = '1.1.3-2'
        springBootVersion = '1.5.4.RELEASE'
        dokka_version = '0.9.15'
    }
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath("org.jetbrains.dokka:dokka-gradle-plugin:${dokka_version}")
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'kotlin-jpa'
apply plugin: 'jacoco'
apply plugin: 'org.springframework.boot'
apply plugin: 'org.jetbrains.dokka'

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

jacocoTestReport {
    reports {
        csv.enabled false
        html.enabled true
        xml.enabled true
    }
}
check.dependsOn jacocoTestReport

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = 'LINE'
                minimum = 1.0
            }
            limit {
                counter = 'CLASS'
                minimum = 1.0
            }
        }
    }
    dependsOn check
}

configurations {
    ktlint
}

task ktlint(type: JavaExec) {
    main = "com.github.shyiko.ktlint.Main"
    classpath = configurations.ktlint
    args "src/**/*.kt"
    // prepend "--reporter=plain?group_by_file" arg to change the reporter
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec) {
    main = "com.github.shyiko.ktlint.Main"
    classpath = configurations.ktlint
    args "-F", "src/**/*.kt"
}

dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/javadoc"
}

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    ktlint("com.github.shyiko:ktlint:0.9.0")
    compile("org.postgresql:postgresql")
    compile("org.springframework.boot:spring-boot-starter")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-data-rest")
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}")
    compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
    testCompile("org.springframework:spring-test")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("org.springframework.security:spring-security-test")
    testCompile("org.jetbrains.kotlin:kotlin-test-junit:${kotlinVersion}")
    testCompile("org.seleniumhq.selenium:selenium-java")
    testCompile("org.seleniumhq.selenium:selenium-chrome-driver")
    testCompile("io.github.bonigarcia:webdrivermanager:1.7.1")
}
